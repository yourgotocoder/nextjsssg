{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/cse/Projects/Courses/nextJs/nextJsBigger/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetupDetailComponent from \"../../components/meetups/MeetupDetails\";\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetailComponent, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["/home/cse/Projects/Courses/nextJs/nextJsBigger/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetailComponent","MeetupDetailsPage","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjC,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,qBAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAXD;;KAAMN,iB;;AA4DN,eAAeA,iBAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetailComponent from \"../../components/meetups/MeetupDetails\";\n\nconst MeetupDetailsPage = (props) => {\n    return (\n        <Fragment>\n            <MeetupDetailComponent\n                image={props.meetupData.image}\n                title={props.meetupData.title}\n                address={props.meetupData.address}\n                description={props.meetupData.description}\n            ></MeetupDetailComponent>\n        </Fragment>\n    );\n};\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        \"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: { meetupId: meetup._id.toString() },\n        })),\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const selectedMeetup = await meetupsCollection.findOne({\n        _id: ObjectId(meetupId),\n    });\n\n    console.log(selectedMeetup);\n\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup,\n            },\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}