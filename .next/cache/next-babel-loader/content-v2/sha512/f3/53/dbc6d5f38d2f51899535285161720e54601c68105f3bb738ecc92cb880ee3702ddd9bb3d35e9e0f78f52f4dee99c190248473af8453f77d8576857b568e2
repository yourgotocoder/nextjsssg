{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cse/Projects/Courses/nextJs/nextJsBigger/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetailComponent from \"../../components/meetups/MeetupDetails\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetailComponent, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title\n      }\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/home/cse/Projects/Courses/nextJs/nextJsBigger/pages/[meetupId]/index.js"],"names":["Fragment","MongoClient","ObjectId","MeetupDetailComponent","MeetupDetailsPage","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,qBAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,wGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADoB,KAAb,CAAZ;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,wGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACnDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADsC,GAA1B,CAA7B;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEAnB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB;AAFd;AADT;AADJ,GAAP;AAQH;AAED,eAAeJ,iBAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetailComponent from \"../../components/meetups/MeetupDetails\";\n\nconst MeetupDetailsPage = (props) => {\n    return (\n        <Fragment>\n            <MeetupDetailComponent\n                image={props.meetupData.image}\n                title={props.meetupData.title}\n                address={props.meetupData.address}\n                description={props.meetupData.description}\n            ></MeetupDetailComponent>\n        </Fragment>\n    );\n};\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        \"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: { meetupId: meetup._id.toString() },\n        })),\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://SuduGod:keYRing123@mongodb-graphql.qg7ft.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const selectedMeetup = await meetupsCollection.findOne({\n        _id: ObjectId(meetupId),\n    });\n\n    console.log(selectedMeetup);\n\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n            },\n        },\n    };\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}